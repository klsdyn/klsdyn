#include<iostream>
#include<cstdio>
using namespace std;
typedef int ElemType;
typedef struct Lnode{
	ElemType data;
	struct Lnode *next;
}Lnode,*LinkList;

int ListInsert(LinkList &L) 
{
	L=new Lnode; 
	L->next=NULL; 
	LinkList p,s=L; 
	int a;
	while(cin>>a&&a!=-1)
	{
		p=new Lnode;
		p->data=a;
		p->next=NULL;
		s->next=p;
		s=p;
	}
}

int MergeList(LinkList &L1,LinkList &L2,LinkList &L3)
{
	LinkList pa,pb,pc;
	pa=L1->next;
	pb=L2->next;
	pc=L3=L1;
	while(pa&&pb)
	{
		if(pa->data<=pb->data)
		{
			pc->next=pa;
			pc=pa;
			pa=pa->next;
		}
		else
		{
			pc->next=pb;
			pc=pb;
			pb=pb->next;
		}
	 } 
	 pc->next=pa?pa:pb;
	 delete L2;
}

int main()
{
	LinkList L1,L2,L3;
	ListInsert(L1);
	ListInsert(L2);
	MergeList(L1,L2,L3);
	LinkList p=L3->next;
	if(p==NULL)
	cout<<"NULL";
	while(p)
	{
		cout<<p->data;
		if(p->next!=NULL)
		cout<<" ";
		p=p->next;
	}
	return 0;
}

